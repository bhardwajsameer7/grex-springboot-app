name: CI/CD for Spring Boot Application

on:
  push:
    branches:
      - main

env:
  APP_NAME: grex-springboot-app
  REGISTRY_URL: ghcr.io
  MAVEN_REPO: grex-organisation/maven-package-registry
  DOCKER_REPO: grex-organisation/docker-container-registry
  DOCKER_IMAGE_SUFFIX: image-docker
  BUILD_TIMESTAMP: ${{ format('DDMMYYYYHHmm', github.event.timestamp) }}
  WAR_FILE_NAME: ${{ env.APP_NAME }}-${{ env.BUILD_TIMESTAMP }}.war
  DOCKER_TAG: ${{ env.BUILD_TIMESTAMP }}
  MAVEN_USERNAME: ${{ github.actor }}
  MAVEN_PASSWORD: ${{ secrets.ORG_CICD_TOKEN }}


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from GitHub repository
      - name: Checkout source code
        uses: actions/checkout@v3

      # Set up JDK 17 (or other versions you are using)
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      # Cache Maven dependencies
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      # Build the project and package
      - name: Build with Maven
        run: mvn clean package

      # Extract version and artifactId from pom.xml
      - name: Extract version and artifactId
        id: vars
        run: |
          version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          artifactId=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)
          timestamp=$(date +%Y%m%d%H%M%S)
          echo "VERSION=${version}" >> $GITHUB_ENV
          echo "ARTIFACT_ID=${artifactId}" >> $GITHUB_ENV
          echo "TIMESTAMP=${timestamp}" >> $GITHUB_ENV

      # Publish to GitHub Packages
      - name: Publish WAR to GitHub Packages
        run: |
          mvn deploy
        env:
          GITHUB_TOKEN: ${{ secrets.ORG_CICD_TOKEN }}


      # Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to GitHub Container Registry (ghcr.io)
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ github.actor }}
          password: ${{ secrets.ORG_CICD_TOKEN }}

      # Build Docker image
      - name: Build Docker image
        run:  docker build . -t ${{ env.REGISTRY_URL }}/${{ env.DOCKER_REPO }}/${{ env.APP_NAME }}-{{env.DOCKER_IMAGE_SUFFIX}}:${{ env.DOCKER_TAG }} <- Dockerfile

      # Push Docker image to GitHub Container Registry
      - name: Push Docker image
        run:  docker push ${{ env.REGISTRY_URL }}/${{ env.DOCKER_REPO }}/${{ env.APP_NAME }}-{{env.DOCKER_IMAGE_SUFFIX}}:${{ env.DOCKER_TAG }}


      # Tag Docker image with `latest` tag
      - name: Tag Docker image as latest
        run: |
          docker tag ${{ env.REGISTRY_URL }}/${{ env.DOCKER_REPO }}/${{ env.APP_NAME }}-{{env.DOCKER_IMAGE_SUFFIX}}:${{ env.DOCKER_TAG }}   ${{ env.REGISTRY_URL }}/${{ env.DOCKER_REPO }}/${{ env.APP_NAME }}-{{env.DOCKER_IMAGE_SUFFIX}}:latest
          docker push ${{ env.REGISTRY_URL }}/${{ env.DOCKER_REPO }}/${{ env.APP_NAME }}-{{env.DOCKER_IMAGE_SUFFIX}}:latest

